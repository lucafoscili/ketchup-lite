:host {
  /**
 * @prop --kul-button-backdrop-filter: Sets the backdrop filter of buttons.
 * Defaults to blur(3.5px).
 */
  --kul_button_backdrop_filter: var(--kul-button-backdrop-filter, blur(3.5px));
  /**
  * @prop --kul-button-backdrop-filter-hover: Sets the backdrop filter of buttons when hovering.
  * Defaults to blur(5px).
  */
  --kul_button_backdrop_filter_hover: var(
    --kul-button-backdrop-filter-hover,
    blur(5px)
  );
  /**
  * @prop --kul-button-border-radius: Sets border radius of the button.
  * Defaults to 4px.
  */
  --kul_button_border_radius: var(--kul-button-border-radius, 4px);
  /**
  * @prop --kul-button-disabled-color: Sets disabled color of the button.
  * Defaults to var(--kul-disabled-color).
  */
  --kul_button_disabled_color: var(
    --kul-button-disabled-color,
    var(--kul-disabled-color)
  );
  /**
  * @prop --kul-button-font-family: Sets font family of the button.
  * Defaults to var(--kul-font-family).
  */
  --kul_button_font_family: var(
    --kul-button-font-family,
    var(--kul-font-family)
  );
  /**
  * @prop --kul-button-font-size: Sets font size of the button.
  * Defaults to var(--kul-font-size).
  */
  --kul_button_font_size: var(--kul-button-font-size, var(--kul-font-size));
  /**
  * @prop --kul-button-font-weight: Sets font weight of the button.
  * Defaults to 400.
  */
  --kul_button_font_weight: var(--kul-button-font-weight, 400);
  /**
  * @prop --kul-button-height: Sets height of the button.
  * Defaults to 3em.
  */
  --kul_button_height: var(--kul-button-height, 3em);
  /**
  * @prop --kul-button-padding: Sets padding of the button.
  * Defaults to 0 1.25em.
  */
  --kul_button_padding: var(--kul-button-padding, 0 1.25em);
  /**
  * @prop --kul-button-primary-color: Sets the primary color of the button.
  * Defaults to var(--kul-primary-color).
  */
  --kul_button_primary_color: var(
    --kul-button-primary-color,
    var(--kul-primary-color)
  );
  /**
  * @prop --kul-button-primary-color-h: Sets the primary color Hue value of the button (used for focus/hover effects).
  * Defaults to var(--kul-primary-color-h).
  */
  --kul_button_primary_color_h: var(
    --kul-button-primary-color-h,
    var(--kul-primary-color-h)
  );
  /**
  * @prop --kul-button-primary-color-s: Sets the primary color Saturation value of the button (used for focus/hover effects).
  * Defaults to var(--kul-primary-color-s).
  */
  --kul_button_primary_color_s: var(
    --kul-button-primary-color-s,
    var(--kul-primary-color-s)
  );

  /**
  * @prop --kul-button-primary-color-l: Sets the primary color Lightness value of the button (used for focus/hover effects).
  * Defaults to var(--kul-primary-color-l).
  */
  --kul_button_primary_color_l: var(
    --kul-button-primary-color-l,
    var(--kul-primary-color-l)
  );
  /**
  * @prop --kul-button-primary-color-rgb: Sets the primary color RGB values of the button (used for shaders).
  * Defaults to var(--kul-primary-color-rgb).
  */
  --kul_button_primary_color_rgb: var(
    --kul-button-primary-color-rgb,
    var(--kul-primary-color-rgb)
  );
  /**
  * @prop --kul-button-text-on-primary-color: Sets text and icon color for raised buttons.
  * Defaults to var(--kul-text-on-primary-color).
  */
  --kul_button_text_on_primary_color: var(
    --kul-button-text-on-primary-color,
    var(--kul-text-on-primary-color)
  );
  /**
  * @prop --kul-button-text-transform: Set the label case, default is uppercase.
  * Defaults to uppercase.
  */
  --kul_button_text_transform: var(--kul-button-text-transform, uppercase);
  /**
  * @prop --kul-spinner-color: Sets the spinner color.
  * Defaults to var(--kul-button-primary-color).
  */
  --kul_spinner_color: var(--kul_button_primary_color);

  display: block;
  font-size: var(--kul_button_font_size);
  width: max-content;
}

#kul-component {
  align-items: center;
  display: flex;
}

.button {
  align-items: center;
  background-color: transparent;
  border: none;
  border-radius: var(--kul_button_border_radius);
  box-sizing: border-box;
  color: var(--kul_button_primary_color);
  cursor: pointer;
  display: inline-flex;
  font-family: var(--kul_button_font_family);
  font-size: 0.775em;
  font-weight: var(--kul_button_font_weight);
  height: var(--kul_button_height);
  justify-content: center;
  letter-spacing: 0.0892857143em;
  line-height: inherit;
  min-width: 64px;
  outline: none;
  overflow: visible;
  padding: var(--kul_button_padding);
  position: relative;
  text-decoration: none;
  text-transform: var(--kul_button_text_transform);
  transform: translate3d(0, 0, 0);
  transition:
    background-color 80ms linear,
    box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);
  user-select: none;
  vertical-align: middle;

  &:hover {
    background-color: rgba(var(--kul_button_primary_color_rgb), 0.125);
  }

  &:focus {
    background-color: rgba(var(--kul_button_primary_color_rgb), 0.375);
  }

  &--floating,
  &--raised,
  &--outlined {
    backdrop-filter: var(--kul_button_backdrop_filter);
  }

  &--floating,
  &--raised {
    --kul-spinner-color: var(--kul-text-color);

    &:not(.button--disabled) {
      --kul-spinner-border-color: hsl(
        var(--kul_button_primary_color_h),
        calc(var(--kul_button_primary_color_s) * 0.75),
        calc(var(--kul_button_primary_color_l) * 0.85)
      );

      background-color: rgba(var(--kul_button_primary_color_rgb), 0.15);
    }

    &:focus,
    &:hover {
      backdrop-filter: var(--kul_button_backdrop_filter);
    }

    &.button--disabled {
      background-color: var(--kul-disabled-background-color);
      box-shadow: none;
    }
  }

  &--floating {
    border-radius: 24px;
    box-shadow:
      0 0.215em 0.35em -1px rgba(var(--kul-text-color-rgb), 0.2),
      0 0.43em 0.71em 0 rgba(var(--kul-text-color-rgb), 0.14),
      0 0.07em 1.285em 0 rgba(var(--kul-text-color-rgb), 0.12);
    font-weight: 500;
    font-size: 1em;
    height: 3.4em;
    width: auto;
    padding: 0 1.5em;

    &.button--no-label {
      border-radius: 50%;
      height: 4em;
      padding: 0;
      width: 4em;
    }

    &:hover,
    &:focus {
      box-shadow:
        0 5px 5px -3px rgba(var(--kul-text-color-rgb), 0.25),
        0 8px 10px 1px rgba(var(--kul-text-color-rgb), 0.18),
        0 3px 14px 2px rgba(var(--kul-text-color-rgb), 0.15);
    }

    &:active {
      box-shadow:
        0 7px 8px -4px rgba(var(--kul-text-color-rgb), 0.2),
        0 12px 17px 2px rgba(var(--kul-text-color-rgb), 0.14),
        0 5px 22px 4px rgba(var(--kul-text-color-rgb), 0.12);
    }
  }

  &--disabled {
    color: var(--kul_button_disabled_color);
    cursor: auto;
    opacity: 0.75;
    pointer-events: none;
  }

  &--no-label {
    min-width: unset;
    padding: 0 0.5em;

    .button__icon {
      margin: 0;
    }
  }

  &--outlined {
    border-width: 1px;
    border-style: solid;

    &:not(.button--disabled) {
      border-color: var(--kul_button_primary_color);
      background-color: transparent;
      color: var(--kul_button_primary_color);
    }

    &:hover {
      backdrop-filter: blur(5px);
      background-color: rgba(var(--kul_button_primary_color_rgb), 0.125);
    }

    &:focus {
      backdrop-filter: blur(5px);
      background-color: rgba(var(--kul_button_primary_color_rgb), 0.175);
    }

    &.button--disabled {
      opacity: 0.75;
      border-color: var(--kul_button_disabled_color);
    }
  }

  &--raised {
    box-shadow:
      0 3px 1px -2px rgba(var(--kul-text-color-rgb), 0.2),
      0 2px 2px 0 rgba(var(--kul-text-color-rgb), 0.14),
      0 1px 5px 0 rgba(var(--kul-text-color-rgb), 0.12);

    &:focus,
    &:hover {
      box-shadow:
        0 2px 4px -1px rgba(var(--kul-text-color-rgb), 0.25),
        0 4px 5px 0 rgba(var(--kul-text-color-rgb), 0.18),
        0 1px 10px 0 rgba(var(--kul-text-color-rgb), 0.15);
    }

    &:active {
      box-shadow:
        0 5px 5px -3px rgba(var(--kul-text-color-rgb), 0.2),
        0 8px 10px 1px rgba(var(--kul-text-color-rgb), 0.14),
        0 3px 14px 2px rgba(var(--kul-text-color-rgb), 0.12);
    }
  }

  &--with-spinner {
    opacity: 0.8;
    pointer-events: none;
  }

  &--dropdown {
    min-width: unset;
    padding: 0.5em;
    position: relative;

    &:before {
      background-color: var(--kul-border-color);
      content: '';
      height: 100%;
      left: 0;
      opacity: 0.75;
      position: absolute;
      top: 0;
      width: 1px;
    }

    kul-image {
      margin: 0;
    }
  }

  &__spinner-container {
    width: 100%;
    height: var(--kul_button_spinner_height);
    left: 0;
    position: absolute;
  }

  &__icon {
    margin-left: -0.25em;
    margin-right: 0.75em;
  }

  &__label + .button__icon {
    margin-left: 0.75em;
    margin-right: -0.25em;
  }
}

.icon-button {
  background-color: transparent;
  color: var(--kul_button_primary_color);
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  border: none;
  outline: none;
  font-size: var(--kul_button_font_size);
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  padding: 0.75em;
  border-radius: 50%;

  &:hover,
  &:focus {
    backdrop-filter: blur(5px);
    background-color: rgba(var(--kul_button_primary_color_rgb), 0.125);
  }

  &__icon {
    display: flex;
    margin: auto;

    &.icon-button__icon--on {
      display: none;
    }
  }

  &--disabled {
    opacity: 0.75;
    pointer-events: none;
  }

  &__spinner-container {
    width: var(--kul_button_spinner_width);
    height: var(--kul_button_spinner_height);
  }
}

.content--hidden {
  visibility: hidden;
}

@keyframes pulsating {
  0% {
    transform: scale(2);
    box-shadow: 0 0 0 0 rgba(var(--kul_button_primary_color_rgb), 0.7);
  }

  70% {
    transform: scale(2.75);
    box-shadow: 0 0 0 10px rgba(var(--kul_button_primary_color_rgb), 0);
  }

  100% {
    transform: scale(2);
    box-shadow: 0 0 0 0 rgba(var(--kul_button_primary_color_rgb), 0);
  }
}
