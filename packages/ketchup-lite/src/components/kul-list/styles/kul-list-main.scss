:host {
  /**
   * @prop --kul-list-backdrop-filter: Sets the backdrop filter of the list.
   * Defaults to blur(3.5px).
   */
  --kul_list_backdrop_filter: var(--kul-list-backdrop-filter, blur(3.5px));
  /**
   * @prop --kul-list-background-color: Sets the background color of the list.
   * Defaults to rgba(var(--kul-background-color-rgb), 0.75).
   */
  --kul_list_background_color: rgba(var(--kul-background-color-rgb), 0.75);
  /**
 * @prop --kul-list-font-family: Sets font family of the component.
 * Defaults to the value of --kul-font-family.
 */
  --kul_list_font_family: var(--kul-list-font-family, var(--kul-font-family));
  /**
 * @prop --kul-list-font-size: Sets font size of the component.
 * Defaults to the value of --kul-font-size.
 */
  --kul_list_font_size: var(--kul-list-font-size, var(--kul-font-size));
  /**
 * @prop --kul-list-font-weight: Sets font weight of the component.
 * Defaults to 400.
 */
  --kul_list_font_weight: var(--kul-list-font-weight, 400);
  /**
 * @prop --kul-list-group-item-height: Sets height of each list item when the list contains radio buttons or checkboxes.
 * Defaults to 3em.
 */
  --kul_list_group_item_height: var(--kul-list-group-item-height, 3em);
  /**
 * @prop --kul-list-item-height: Sets height of each list item.
 * Defaults to 2.5em.
 */
  --kul_list_item_height: var(--kul-list-item-height, 2.5em);
  /**
 * @prop --kul-list-item-padding: Sets the padding of each list item.
 * Defaults to 0 0.75em.
 */
  --kul_list_item_padding: var(--kul-list-item-padding, 0 0.75em);
  /**
 * @prop --kul-list-primary-color: Sets the primary color of the component.
 * Defaults to the value of --kul-primary-color.
 */
  --kul_list_primary_color: var(
    --kul-list-primary-color,
    var(--kul-primary-color)
  );
  /**
 * @prop --kul-list-primary-color-rgb: Sets the RGB values of the primary color of the component (used for shaders).
 * Defaults to the value of --kul-primary-color-rgb.
 */
  --kul_list_primary_color_rgb: var(
    --kul-list-primary-color-rgb,
    var(--kul-primary-color-rgb)
  );
  /**
 * @prop --kul-list-text-color: Sets text color of the list.
 * Defaults to the value of --kul-text-color.
 */
  --kul_list_text_color: var(--kul-list-text-color, var(--kul-text-color));
  /**
 * @prop --kul-list-text-color-rgb: Sets the RGB values of text color.
 * Defaults to the value of --kul-text-color-rgb.
 */
  --kul_list_text_color_rgb: var(
    --kul-list-text-color-rgb,
    var(--kul-text-color-rgb)
  );
  /**
 * @prop --kul-list-transition: Transitions duration for text and background colors.
 * Defaults to 125ms.
 */
  --kul_list_transition: var(--kul-list-transition, 125ms);

  -webkit-backdrop-filter: var(--kul_list_backdrop_filter);
  backdrop-filter: var(--kul_list_backdrop_filter);
  background-color: var(--kul_list_background_color);
  display: block;
  font-family: var(--kul_list_font_family);
  font-size: var(--kul_list_font_size);
  height: 100%;
  outline: none;
  width: 100%;
}

#kul-component {
  height: 100%;
  width: 100%;
}

.list {
  box-sizing: border-box;
  color: var(--kul_list_text_color);
  font-weight: var(--kul_list_font_weight);
  height: 100%;
  letter-spacing: 0.009375em;
  line-height: 1.5em;
  list-style-type: none;
  margin: 0;
  padding: 0.5em 0;
  text-decoration: inherit;
  text-transform: inherit;
  width: 100%;

  &--empty {
    padding: 0;
  }

  &--selectable {
    .node {
      cursor: pointer;
      pointer-events: all;

      &:not(.node--selected) {
        &:hover,
        &.node--focused {
          background-color: rgba(var(--kul_list_text_color_rgb), 0.125);
        }
      }

      &.node--selected:hover {
        background-color: rgba(var(--kul_list_primary_color_rgb), 0.225);
        color: var(--kul_list_primary_color);
      }
    }
  }
}

.node {
  align-items: center;
  display: flex;
  height: var(--kul_list_item_height);
  justify-content: flex-start;
  padding: var(--kul_list_item_padding);
  pointer-events: none;
  position: relative;
  outline: none;
  overflow: hidden;
  transition:
    background-color var(--kul_list_transition),
    color var(--kul_list_transition);

  &--has-description {
    align-self: flex-start;
    height: 3.6em;
  }

  &--selected {
    background-color: rgba(var(--kul_list_primary_color_rgb), 0.175);
    color: var(--kul_list_primary_color);
  }

  &__title {
    display: block;
    line-height: normal;
    margin-bottom: -1.5em;
    margin-top: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    &:before {
      content: '';
      display: inline-block;
      width: 0;
      height: 1.5em;
      vertical-align: 0;
    }

    &:after {
      content: '';
      display: inline-block;
      width: 0;
      height: 2em;
      vertical-align: -2em;
    }
  }

  &__subtitle {
    color: var(--kul_list_text_color);
    display: block;
    font-size: 0.875em;
    font-weight: 400;
    letter-spacing: 0.0178571429em;
    line-height: normal;
    margin-top: 0;
    opacity: 0.75;
    overflow: hidden;
    padding-bottom: 0.5em;
    text-decoration: inherit;
    text-transform: inherit;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &__icon {
    background-color: var(--kul_list_text_color);
    height: 1.5em;
    margin: 0 0.75em 0 0;
    width: 1.5em;
  }
}

.empty-data {
  align-items: center;
  display: flex;
  justify-content: center;
  height: 100%;
  width: 100%;
}
