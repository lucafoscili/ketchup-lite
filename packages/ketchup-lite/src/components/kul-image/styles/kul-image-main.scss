:host {
  /**
  * @prop --kul-image-aspect-ratio: Sets the aspect ratio of the image.
  * Defaults to 1 (square).
  */
  --kul_image_aspect_ratio: var(--kul-image-aspect-ratio, 1);
  /**
  * @prop --kul-image-background: Sets the background color of the image icon.
  * Defaults to transparent.
  */
  --kul_image_background: var(--kul-image-background, transparent);
  /**
  * @prop --kul-image-height: Sets the height of the image.
  * Defaults to 100%.
  */
  --kul_image_height: var(--kul-image-height, 100%);
  /**
  * @prop --kul-image-margin: Sets the margin of the image.
  * Defaults to auto.
  */
  --kul_image_margin: var(--kul-image-margin, auto);
  /**
  * @prop --kul-image-mask: Sets the mask for the image icon.
  * Defaults to none.
  */
  --kul_image_mask: var(--kul-image-mask, none);
  /**
  * @prop --kul-image-spinner-offset: Sets the offset of the spinner from the center.
  * Defaults to calc(var(--kul-image-spinner-size) / 2).
  */
  --kul_image_spinner_offset: var(
    --kul-image-spinner-offset,
    calc(var(--kul_image_spinner_size) / 2)
  );
  /**
  * @prop --kul-image-spinner-size: Sets the size of the spinner.
  * Defaults to 32px.
  */
  --kul_image_spinner_size: var(--kul-image-spinner-size, 32px);
  /**
  * @prop --kul-image-transition-duration: Sets the duration of the color transition.
  * Defaults to 0.2s.
  */
  --kul_image_transition_duration: var(--kul-image-transition-duration, 0.2s);
  /**
  * @prop --kul-image-transition-timing-function: Sets the timing function of the color transition.
  * Defaults to ease.
  */
  --kul_image_transition_timing_function: var(
    --kul-image-transition-timing-function,
    ease
  );
  /**
  * @prop --kul-image-width: Sets the width of the image.
  * Defaults to 100%.
  */
  --kul_image_width: var(--kul-image-width, 100%);

  display: block;
  height: var(--kul_image_height);
  margin: var(--kul_image_margin);
  min-height: var(--kul_image_height);
  min-width: var(--kul_image_width);
  position: relative;
  transition: color var(--kul_image_transition_duration)
    var(--kul_image_transition_timing_function);
  width: var(--kul_image_width);
}

#kul-component {
  height: 100%;
  margin: var(--kul_image_margin);
  position: relative;
  transition: color var(--kul_image_transition_duration)
    var(--kul_image_transition_timing_function);
  width: 100%;
}

.image {
  display: block;
  height: var(--kul_image_height);
  margin: var(--kul_image_margin);
  position: relative;
  width: var(--kul_image_width);

  &__icon {
    aspect-ratio: var(--kul_image_aspect_ratio);
    background-color: var(--kul_image_background);
    height: var(--kul_image_height);
    margin: var(--kul_image_margin);
    mask: var(--kul_image_mask);
    -webkit-mask: var(--kul_image_mask);
    width: var(--kul_image_width);
  }
}

img {
  display: block;
  height: var(--kul_image_height);
  margin: var(--kul_image_margin);
  width: var(--kul_image_width);
}

.spinner {
  height: var(--kul_image_spinner_size);
  left: calc(50% - var(--kul_image_spinner_offset));
  position: absolute;
  top: calc(50% - var(--kul_image_spinner_offset));
  width: var(--kul_image_spinner_size);
}
