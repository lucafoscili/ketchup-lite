:host {
  & {
    -webkit-backdrop-filter: var(--kul_list_backdrop_filter);
    backdrop-filter: var(--kul_list_backdrop_filter);
    background-color: var(--kul_list_background_color);
    display: block;
    font-family: var(--kul_chip_font_family);
    font-size: var(--kul_chip_font_size);
    height: 100%;
    outline: none;
    width: 100%;
  }

  /**
   * @prop --kul-chip-background-color: Sets background color of the component.
   * Defaults to the value of --kul-background-color.
   */
  --kul_chip_background_color: var(
    --kul-chip-background-color,
    var(--kul-background-color)
  );
  /**
   * @prop --kul-chip-border-radius: Sets border radius of the chips.
   * Defaults to 16px.
   */
  --kul_chip_border_radius: var(--kul-chip-border-radius, 16px);
  /**
   * @prop --kul-chip-font-family: Sets font family of the chips.
   * Defaults to the value of --kul-font-family.
   */
  --kul_chip_font_family: var(--kul-chip-font-family, var(--kul-font-family));
  /**
   * @prop --kul-chip-font-size: Sets font size of the chips.
   * Defaults to the value of --kul-font-size.
   */
  --kul_chip_font_size: var(--kul-chip-font-size, var(--kul-font-size));
  /**
   * @prop --kul-chip-font-weight: Sets font weight of the chips.
   * Defaults to the value of --kul-font-weight.
   */
  --kul_chip_font_weight: var(--kul-chip-font-weight, var(--kul-font-weight));
  /**
   * @prop --kul-chip-height: Sets height of the chips.
   * Defaults to 32px.
   */
  --kul_chip_height: var(--kul-chip-height, 32px);
  /**
   * @prop --kul-chip-indent-multiplier: Sets the indentation multiplier for children chips.
   * Defaults to 10.
   */
  --kul_chip_indent_multiplier: var(--kul-chip-indent-multiplier, 10);
  /**
   * @prop --kul-chip-margin: Sets margin of the chips.
   * Defaults to 4px.
   */
  --kul_chip_margin: var(--kul-chip-margin, 4px);
  /**
   * @prop --kul-chip-padding: Sets padding of the chips.
   * Defaults to 0 12px.
   */
  --kul_chip_padding: var(--kul-chip-padding, 0 12px);
  /**
   * @prop --kul-chip-primary-color: Sets primary color of the component.
   * Defaults to the value of --kul-primary-color.
   */
  --kul_chip_primary_color: var(
    --kul-chip-primary-color,
    var(--kul-primary-color)
  );
  /**
   * @prop --kul-chip-primary-color-rgb: Sets primary color RGB values of the component (used for shaders).
   * Defaults to the value of --kul-primary-color-rgb.
   */
  --kul_chip_primary_color_rgb: var(
    --kul-chip-primary-color-rgb,
    var(--kul-primary-color-rgb)
  );
  /**
   * @prop --kul-chip-text-color: Sets text color of the component.
   * Defaults to the value of --kul-text-color.
   */
  --kul_chip_text_color: var(--kul-chip-text-color, var(--kul-text-color));
  /**
   * @prop --kul-chip-text-color-rgb: Sets text color RGB values of the component (used for shaders).
   * Defaults to the value of --kul-text-color-rgb.
   */
  --kul_chip_text_color_rgb: var(
    --kul-chip-text_color_rgb,
    var(--kul-text-color-rgb)
  );
}

#kul-component,
.chip-set {
  height: 100%;
  width: 100%;
}

.chip-set {
  & {
    align-content: center;
    box-sizing: border-box;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 4px;
  }

  &--choice,
  &--filter,
  &--input {
    .chip {
      cursor: pointer;
    }
  }

  &--choice {
    .chip--selected {
      background-color: var(--kul_chip_background_color);
      background-image: linear-gradient(
        to right,
        rgba(var(--kul_chip_primary_color_rgb), 0.25) 0%,
        rgba(var(--kul_chip_primary_color_rgb), 0.25) 0.1%,
        rgba(var(--kul_chip_primary_color_rgb), 0.25)
      );
      color: var(--kul_chip_primary_color);
    }
  }

  &--filter {
    .chip__icon--leading {
      opacity: 1;
      transition: opacity 75ms linear;
      transition-delay: -50ms;

      & + .chip__checkmark {
        & {
          opacity: 0;
          transition: opacity 75ms linear;
          transition-delay: 80ms;
        }

        .chip__checkmark-svg {
          transition: width 0ms;
        }
      }

      &.chip__icon--leading-hidden {
        & {
          display: none;
          width: 0;
          opacity: 0;
        }

        & + .chip__checkmark {
          height: 20px;
          width: 20px;
          opacity: 1;
        }
      }
    }

    .chip--selected {
      .chip__icon--leading {
        opacity: 0;
      }

      .chip__checkmark-path {
        stroke-dashoffset: 0;
      }

      .chip__checkmark {
        & {
          margin-left: -4px;
          margin-right: 4px;
        }

        .chip__checkmark-svg {
          height: 20px;
          width: 20px;
        }
      }
    }
  }

  &--input {
    .#{$kul-icon-clear} {
      & {
        margin-left: 4px;
        margin-right: -4px;
      }

      &:hover {
        opacity: 0.75;
      }
    }
  }
}

.node {
  & {
    display: flex;
    flex-direction: column;
  }

  &__expand {
    & {
      background-color: var(--kul_chip_text_color);
      cursor: pointer;
      height: 1.5em;
      margin: 0;
      -webkit-mask: var(--kul-collapsed-icon);
      mask: var(--kul-collapsed-icon);
      overflow: hidden;
      transition: transform 125ms ease;
      width: 1.5em;
    }

    &:hover {
      transform: scale(1.25);
    }

    &--expanded {
      -webkit-mask: var(--kul-expanded-icon);
      mask: var(--kul-expanded-icon);
    }

    &--placeholder {
      visibility: hidden;
    }
  }
}

.chip-wrapper {
  & {
    align-items: center;
    display: flex;
  }

  &--hidden-children {
    .dropdown-icon {
      transform: unset;
    }
  }
}

.indent {
  width: calc(
    var(--kul_chip_margin) * var(--kul_chip_indent_offset) *
      var(--kul_chip_indent_multiplier)
  );
}

.chip {
  & {
    align-items: center;
    background-color: var(--kul_chip_background_color);
    background-image: linear-gradient(
      to right,
      rgba(var(--kul_chip_text_color_rgb), 0.1) 0%,
      rgba(var(--kul_chip_text_color_rgb), 0.1) 0.1%,
      rgba(var(--kul_chip_text_color_rgb), 0.1)
    );
    border-radius: var(--kul_chip_border_radius);
    border-width: 0;
    box-sizing: border-box;
    color: var(--kul_chip_text_color);
    display: inline-flex;
    font-size: 0.875em;
    font-weight: var(--kul_chip_font_weight);
    height: var(--kul_chip_height);
    letter-spacing: 0.0178571429em;
    margin: var(--kul_chip_margin);
    max-width: max-content;
    outline: none;
    padding: var(--kul_chip_padding);
    position: relative;
    text-decoration: inherit;
    text-transform: inherit;
  }

  &__icon--leading {
    & {
      color: var(--kul_chip_text_color);
    }

    &:not(.chip__icon--leading-hidden) {
      margin-left: -4px;
      margin-right: 6px;
    }
  }

  &__icon {
    & {
      background: var(--kul_chip_text_color);
      display: block;
      height: 18px;
      outline: none;
      width: 18px;
    }

    &--leading:not(.chip__icon--leading-hidden) {
      width: 20px;
      height: 20px;
      font-size: 20px;
    }

    &--trailing {
      margin-right: -4px;
      margin-left: 6px;
    }
  }

  &__checkmark-svg {
    width: 0;
    height: 20px;
    transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  &__checkmark-path {
    transition: stroke-dashoffset 150ms 50ms cubic-bezier(0.4, 0, 0.6, 1);
    stroke-width: 2px;
    stroke-dashoffset: 29.7833385;
    stroke-dasharray: 29.7833385;
  }

  svg path {
    color: var(--kul_chip_text_color);
    stroke: var(--kul_chip_text_color);
  }

  &__primary-action {
    & {
      outline: none;
    }

    .chip__text {
      white-space: nowrap;
    }
  }
}
